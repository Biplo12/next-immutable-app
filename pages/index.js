import Head from "next/head";
import Navbar from "../components/Navbar";
import styles from "../styles/Home.module.scss";
import Cards from "../components/Cards";
import { useState } from "react";

const link =
  "https://api.x.immutable.com/v1/assets?page_size=30&collection=0xacb3c6a43d15b907e8433077b6d38ae40936fe2c";

export default function Home({ data }) {
  const [nextCursor, setNextCursor] = useState(data.cursor);
  const [prevCursor, setPrevCursor] = useState("");
  const [pageCursor, setPageCursor] = useState(data.cursor);
  const [newData, setNewData] = useState(data);
  const [page, setPage] = useState(1);
  const [loading, setLoading] = useState(false);

  const nextPageHandler = async () => {
    setPrevCursor(pageCursor);
    setPageCursor(nextCursor);
    setLoading(true);
    const response = await fetch(`${link}&cursor=${nextCursor}`, {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
      },
    })
      .then((res) => res.json())
      .catch((err) => {
        console.log(err);
      })
      .finally(() => {
        setLoading(false);
      });
    setNewData(response);
    setNextCursor(response.cursor);
    setPage((prev) => prev + 1);
  };

  const prevPageHandler = async () => {
    setPrevCursor(pageCursor);
    setPageCursor(nextCursor);
    setLoading(true);
    const response = await fetch(
      `${link}&cursor=${page === 2 ? "" : prevCursor}`,
      {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      }
    )
      .then((res) => res.json())
      .catch((err) => {
        console.log(err);
      })
      .finally(() => {
        setLoading(false);
      });
    setNewData(response);
    setNextCursor(response.cursor);
    setPage((prev) => prev - 1);
  };
  return (
    <>
      <Head>
        <title>ImmutableX API App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      {loading ? (
        <div className={styles.loading}>
          <div className={styles.lds}>
            <div></div>
            <div></div>
          </div>
        </div>
      ) : (
        <div className={styles.container}>
          <div className={styles.pagination}>
            <button disabled={page === 1} onClick={() => prevPageHandler()}>
              Previous page
            </button>
            <p>{page} / 200+</p>
            <button
              disabled={newData.remaining === 0}
              onClick={() => nextPageHandler()}
            >
              Next page
            </button>
          </div>
          <div className={styles.grid}>
            <Cards newData={newData} />
          </div>
        </div>
      )}
    </>
  );
}

export async function getStaticProps() {
  const response = await fetch(link, {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
    },
  })
    .then((res) => res.json())
    .catch((err) => {
      console.error(err);
    });
  return {
    props: {
      data: response,
    },
  };
}
